mutate_at(vars(-Source), ~ as.numeric(.)) %>%
na_if(0) %>%
as.data.frame()
View(df_north_morphology)
# список элементов, которых нет в мишени
mix_na <-
df_north_morphology %>%
filter(Source == "Mix") %>% # оставляем только строку целевого образца
select_if(is.na) %>% # выбираем столбцы с na
gather(var, val) %>% # переменную и значение ориентируем вертикально
pull(var) # извлекаем вектор названий
# 1) ЧТЕНИЕ и подготовка ДАННЫХ
df_north_morphology <-
read_excel(path = "../data/whole_catchment_data.xlsx") %>%
filter(Name != "Размерность") %>%
select(-X, -Y) %>%
rename(id = Name) %>%
mutate_at(vars(-Source), ~ as.numeric(.)) %>%
na_if(0) %>%
as.data.frame()
# список элементов, которых нет в мишени
mix_na <-
df_north_morphology %>%
filter(Source == "Mix") %>% # оставляем только строку целевого образца
select_if(is.na) %>% # выбираем столбцы с na
gather(var, val) %>% # переменную и значение ориентируем вертикально
pull(var) # извлекаем вектор названий
# 1) ЧТЕНИЕ и подготовка ДАННЫХ
df_whole_catchment <-
read_excel(path = "../data/whole_catchment_data.xlsx") %>%
filter(Name != "Размерность") %>%
select(-X, -Y) %>%
rename(id = Name) %>%
mutate_at(vars(-Source), ~ as.numeric(.)) %>%
na_if(0) %>%
as.data.frame()
# список элементов, которых нет в мишени
mix_na <-
df_whole_catchment %>%
filter(Source == "Mix") %>% # оставляем только строку целевого образца
select_if(is.na) %>% # выбираем столбцы с na
gather(var, val) %>% # переменную и значение ориентируем вертикально
pull(var) # извлекаем вектор названий
rlang::last_error()
df_whole_catchment$id
is.vector(df_whole_catchment$id)
any(duplicated(df_whole_catchment$id))
# 1) ЧТЕНИЕ и подготовка ДАННЫХ
df_whole_catchment <-
read_excel(path = "../data/whole_catchment_data.xlsx") %>%
filter(Name != "Размерность") %>%
select(-X, -Y) %>%
rename(id = Name) %>%
mutate_at(vars(-Source), ~ as.numeric(.)) %>%
na_if(0) %>%
as.data.frame()
View(df_whole_catchment)
# 1) ЧТЕНИЕ и подготовка ДАННЫХ
df_whole_catchment <-
read_excel(path = "../data/whole_catchment_data.xlsx") %>%
filter(Name != "Размерность") %>%
select(-X, -Y) %>%
rename(id = Name) %>%
mutate_at(vars(-Source), ~ as.numeric(.)) %>%
na_if(0) %>%
as.data.frame() %>%
filter(id != any_of(1 : 37))
View(df_whole_catchment)
# 1) ЧТЕНИЕ и подготовка ДАННЫХ
df_whole_catchment <-
read_excel(path = "../data/whole_catchment_data.xlsx") %>%
filter(Name != "Размерность") %>%
select(-X, -Y) %>%
rename(id = Name) %>%
mutate_at(vars(-Source), ~ as.numeric(.)) %>%
na_if(0) %>%
as.data.frame() %>%
filter(id != tidyselect::any_of(1 : 37))
# 1) ЧТЕНИЕ и подготовка ДАННЫХ
df_whole_catchment <-
read_excel(path = "../data/whole_catchment_data.xlsx") %>%
filter(Name != "Размерность") %>%
select(-X, -Y) %>%
rename(id = Name) %>%
mutate_at(vars(-Source), ~ as.numeric(.)) %>%
na_if(0) %>%
as.data.frame() %>%
filter(id != 1)
# 1) ЧТЕНИЕ и подготовка ДАННЫХ
df_whole_catchment <-
read_excel(path = "../data/whole_catchment_data.xlsx") %>%
filter(Name != "Размерность") %>%
select(-X, -Y) %>%
rename(id = Name) %>%
mutate_at(vars(-Source), ~ as.numeric(.)) %>%
na_if(0) %>%
as.data.frame() %>%
filter(id !=  tidyselect::all_of(1 : 37))
# 1) ЧТЕНИЕ и подготовка ДАННЫХ
df_whole_catchment <-
read_excel(path = "../data/whole_catchment_data.xlsx") %>%
filter(Name != "Размерность") %>%
select(-X, -Y) %>%
rename(id = Name) %>%
mutate_at(vars(-Source), ~ as.numeric(.)) %>%
na_if(0) %>%
as.data.frame() %>%
filter(id !=tidyselect::all_of(1 : 37))
# 1) ЧТЕНИЕ и подготовка ДАННЫХ
df_whole_catchment <-
read_excel(path = "../data/whole_catchment_data.xlsx") %>%
filter(Name != "Размерность") %>%
select(-X, -Y) %>%
rename(id = Name) %>%
mutate_at(vars(-Source), ~ as.numeric(.)) %>%
na_if(0) %>%
as.data.frame()
v <- 1 : 37
v
v <- 1 : 37
for (i in v) {
filter(.data = df_whole_catchment, ... = id != i)
}
filter(.data = df_whole_catchment, id != i)
for (i in v) {
df_whole_catchment <-
df_whole_catchment %>%
filter(id != i)
}
v2 <- 39 : 45
for (i in v) {
df_whole_catchment <-
df_whole_catchment %>%
filter(id != i)
}
v2 <- 39 : 45
for (i in v2) {
df_whole_catchment <-
df_whole_catchment %>%
filter(id != i)
}
# список элементов, которых нет в мишени
mix_na <-
df_whole_catchment %>%
filter(Source == "Mix") %>% # оставляем только строку целевого образца
select_if(is.na) %>% # выбираем столбцы с na
gather(var, val) %>% # переменную и значение ориентируем вертикально
pull(var) # извлекаем вектор названий
# получение итогового набора данных
df <-
df_north_morphology %>%
select(!all_of(mix_na)) %>%  # оставляем только те элементы, которые есть в целевом образце
mutate_all(~replace(., is.na(.), 0))
# получение итогового набора данных
df <-
df_whole_catchment %>%
select(!all_of(mix_na)) %>%  # оставляем только те элементы, которые есть в целевом образце
mutate_all(~replace(., is.na(.), 0))
# 2) ПРОВЕРКА НА КОЛЛИНЕАРНОСТЬ
collinears <-
df %>%
select(-id, -Source) %>%
correlate(method = "spearman") %>%
rearrange() %>%
shave() %>%
mutate_if(is.numeric, ~abs(.)) %>%
filter_if(is.numeric, any_vars(. > 0.85)) %>%
pull(term)
collinears
df_lda <-
df %>%
select(!any_of(collinears)) # создаем дф без коллинеарных элементов
df_lda %>%
LDAPlot(text = T)
# 4) ВЫБОР ТРАССЕРОВ
df_lda %>%
rangeTest() %>%
KWTest(pvalue = 0.05)
DFATest(df_lda, niveau = 0.05)
# 5) БОКСПЛОТЫ
df %>%
select(id, Source, Al, Zn, smektit, kps, plagioklaz) %>%
gather(elem, cons, -id, -Source) %>%
ggplot(aes(x = Source,
y = cons,
color = Source)) +
geom_boxplot() +
geom_text(aes(label = id)) +
facet_wrap(~elem,
scales = "free_y")
# 6) ПОДТВЕРЖДЕНИЕ ТРАССЕРОВ
df_lda %>%
select(id, Source, Al, Zn, smektit, kps, plagioklaz) %>%
LDAPlot(text = T)
# 7) Размешивание
results <-
df_lda %>%
select(id, Source, Al, Zn, smektit, kps, plagioklaz) %>%
unmix(samples = 100, iter = 1000)
results %>%
plotResults()
# 1) ЧТЕНИЕ и подготовка ДАННЫХ
df_whole_catchment <-
read_excel(path = "../data/whole_catchment_data.xlsx") %>%
filter(Name != "Размерность") %>%
select(-X, -Y) %>%
rename(id = Name) %>%
mutate_at(vars(-Source), ~ as.numeric(.)) %>%
na_if(0) %>%
as.data.frame()
# оставляю только одну целевую точку
v <- 1 : 37
for (i in v) {
df_whole_catchment <-
df_whole_catchment %>%
filter(id != i)
}
v2 <- 39 : 45
for (i in v2) {
df_whole_catchment <-
df_whole_catchment %>%
filter(id != i)
}
# список элементов, которых нет в мишени
mix_na <-
df_whole_catchment %>%
filter(Source == "Mix") %>% # оставляем только строку целевого образца
select_if(is.na) %>% # выбираем столбцы с na
gather(var, val) %>% # переменную и значение ориентируем вертикально
pull(var) # извлекаем вектор названий
# получение итогового набора данных
df <-
df_whole_catchment %>%
select(!all_of(mix_na)) %>%  # оставляем только те элементы, которые есть в целевом образце
mutate_all(~replace(., is.na(.), 0))
# 2) ПРОВЕРКА НА КОЛЛИНЕАРНОСТЬ
collinears <-
df %>%
select(-id, -Source) %>%
correlate(method = "spearman") %>%
rearrange() %>%
shave() %>%
mutate_if(is.numeric, ~abs(.)) %>%
filter_if(is.numeric, any_vars(. > 0.85)) %>%
pull(term)
collinears
# 3) LDA
boxPlot(df, columns = 1:6, ncol = 3)
df_lda <-
df %>%
select(!any_of(collinears)) # создаем дф без коллинеарных элементов
df_lda %>%
LDAPlot(text = T)
# 4) ВЫБОР ТРАССЕРОВ
df_lda %>%
rangeTest() %>%
KWTest(pvalue = 0.05)
DFATest(df_lda, niveau = 0.05)
# 5) БОКСПЛОТЫ
df %>%
select(id, Source, Al, Zn, smektit, kps, plagioklaz) %>%
gather(elem, cons, -id, -Source) %>%
ggplot(aes(x = Source,
y = cons,
color = Source)) +
geom_boxplot() +
geom_text(aes(label = id)) +
facet_wrap(~elem,
scales = "free_y")
# 1) ЧТЕНИЕ и подготовка ДАННЫХ
df_whole_catchment <-
read_excel(path = "../data/whole_catchment_data.xlsx") %>%
filter(Name != "Размерность") %>%
select(-X, -Y) %>%
rename(id = Name) %>%
mutate_at(vars(-Source), ~ as.numeric(.)) %>%
na_if(0) %>%
as.data.frame() %>%
filter(id != 3001) %>%
filter(id != 3002) %>%
filter(id != 3006) %>%
filter(id != 2002) %>%
filter(id != 2009) %>%
filter(id != 2006) %>%
filter(id != 2017) %>%
filter(id != 2001) %>%
filter(id != 2006) %>%
filter(id != 2010) %>%
filter(id != 1030) %>%
filter(id != 1031) %>%
filter(id != 1029) %>%
filter(id != 1017) %>%
filter(id != 1007) %>%
filter(id != 1015)
# оставляю только одну целевую точку
v <- 1 : 37
for (i in v) {
df_whole_catchment <-
df_whole_catchment %>%
filter(id != i)
}
v2 <- 39 : 45
for (i in v2) {
df_whole_catchment <-
df_whole_catchment %>%
filter(id != i)
}
# список элементов, которых нет в мишени
mix_na <-
df_whole_catchment %>%
filter(Source == "Mix") %>% # оставляем только строку целевого образца
select_if(is.na) %>% # выбираем столбцы с na
gather(var, val) %>% # переменную и значение ориентируем вертикально
pull(var) # извлекаем вектор названий
# получение итогового набора данных
df <-
df_whole_catchment %>%
select(!all_of(mix_na)) %>%  # оставляем только те элементы, которые есть в целевом образце
mutate_all(~replace(., is.na(.), 0))
# 2) ПРОВЕРКА НА КОЛЛИНЕАРНОСТЬ
collinears <-
df %>%
select(-id, -Source) %>%
correlate(method = "spearman") %>%
rearrange() %>%
shave() %>%
mutate_if(is.numeric, ~abs(.)) %>%
filter_if(is.numeric, any_vars(. > 0.85)) %>%
pull(term)
collinears
df_lda <-
df %>%
select(!any_of(collinears)) # создаем дф без коллинеарных элементов
df_lda %>%
LDAPlot(text = T)
# 1) ЧТЕНИЕ и подготовка ДАННЫХ
df_whole_catchment <-
read_excel(path = "../data/whole_catchment_data.xlsx") %>%
filter(Name != "Размерность") %>%
select(-X, -Y) %>%
rename(id = Name) %>%
mutate_at(vars(-Source), ~ as.numeric(.)) %>%
na_if(0) %>%
as.data.frame()
# оставляю только одну целевую точку
v <- 1 : 34
for (i in v) {
df_whole_catchment <-
df_whole_catchment %>%
filter(id != i)
}
v2 <- 36 : 45
for (i in v2) {
df_whole_catchment <-
df_whole_catchment %>%
filter(id != i)
}
# список элементов, которых нет в мишени
mix_na <-
df_whole_catchment %>%
filter(Source == "Mix") %>% # оставляем только строку целевого образца
select_if(is.na) %>% # выбираем столбцы с na
gather(var, val) %>% # переменную и значение ориентируем вертикально
pull(var) # извлекаем вектор названий
# получение итогового набора данных
df <-
df_whole_catchment %>%
select(!all_of(mix_na)) %>%  # оставляем только те элементы, которые есть в целевом образце
mutate_all(~replace(., is.na(.), 0))
View(df)
# 2) ПРОВЕРКА НА КОЛЛИНЕАРНОСТЬ
collinears <-
df %>%
select(-id, -Source) %>%
correlate(method = "spearman") %>%
rearrange() %>%
shave() %>%
mutate_if(is.numeric, ~abs(.)) %>%
filter_if(is.numeric, any_vars(. > 0.85)) %>%
pull(term)
collinears
# 3) LDA
boxPlot(df, columns = 1:6, ncol = 3)
df_lda <-
df %>%
select(!any_of(collinears)) # создаем дф без коллинеарных элементов
df_lda %>%
LDAPlot(text = T)
# 4) ВЫБОР ТРАССЕРОВ
df_lda %>%
rangeTest() %>%
KWTest(pvalue = 0.05)
DFATest(df_lda, niveau = 0.05)
# 5) БОКСПЛОТЫ
df %>%
select(id, Source, Al, Zn, kps, plagioklaz) %>%
gather(elem, cons, -id, -Source) %>%
ggplot(aes(x = Source,
y = cons,
color = Source)) +
geom_boxplot() +
geom_text(aes(label = id)) +
facet_wrap(~elem,
scales = "free_y")
# 6) ПОДТВЕРЖДЕНИЕ ТРАССЕРОВ
df_lda %>%
select(id, Source, Al, Zn, kps, plagioklaz) %>%
LDAPlot(text = T)
# 7) Размешивание
results <-
df_lda %>%
select(id, Source, Al, Zn, kps, plagioklaz) %>%
unmix(samples = 100, iter = 1000)
results %>%
plotResults()
setwd("C:/Studies/Donguzorun/FP/FP_2020-2022/Whole_Catchment/morphology/src")
library(tidyverse)
library(dplyr)
library(fingerPro)
library(readxl)
library(corrr)
# 1) ЧТЕНИЕ и подготовка ДАННЫХ
df_whole_catchment <-
read_excel(path = "../data/3-sourses_whole_catchment_data.xlsx") %>%
filter(Name != "Размерность") %>%
select(-X, -Y) %>%
rename(id = Name) %>%
mutate_at(vars(-Source), ~ as.numeric(.)) %>%
na_if(0) %>%
as.data.frame()
View(df_whole_catchment)
# оставляю только одну целевую точку
v <- 1 : 37
for (i in v) {
df_whole_catchment <-
df_whole_catchment %>%
filter(id != i)
}
v2 <- 39 : 45
for (i in v2) {
df_whole_catchment <-
df_whole_catchment %>%
filter(id != i)
}
# список элементов, которых нет в мишени
mix_na <-
df_whole_catchment %>%
filter(Source == "Mix") %>% # оставляем только строку целевого образца
select_if(is.na) %>% # выбираем столбцы с na
gather(var, val) %>% # переменную и значение ориентируем вертикально
pull(var) # извлекаем вектор названий
# получение итогового набора данных
df <-
df_whole_catchment %>%
select(!all_of(mix_na)) %>%  # оставляем только те элементы, которые есть в целевом образце
mutate_all(~replace(., is.na(.), 0))
# 2) ПРОВЕРКА НА КОЛЛИНЕАРНОСТЬ
collinears <-
df %>%
select(-id, -Source) %>%
correlate(method = "spearman") %>%
rearrange() %>%
shave() %>%
mutate_if(is.numeric, ~abs(.)) %>%
filter_if(is.numeric, any_vars(. > 0.85)) %>%
pull(term)
collinears
df_lda <-
df %>%
select(!any_of(collinears)) # создаем дф без коллинеарных элементов
df_lda %>%
LDAPlot(text = T)
# 4) ВЫБОР ТРАССЕРОВ
df_lda %>%
rangeTest() %>%
KWTest(pvalue = 0.05)
DFATest(df_lda, niveau = 0.05)
# 5) БОКСПЛОТЫ
df %>%
select(id, Source, Al, Zn, kps, plagioklaz, mn, smektit, Ba) %>%
gather(elem, cons, -id, -Source) %>%
ggplot(aes(x = Source,
y = cons,
color = Source)) +
geom_boxplot() +
geom_text(aes(label = id)) +
facet_wrap(~elem,
scales = "free_y")
# 5) БОКСПЛОТЫ
df %>%
select(id, Source, Al, Zn, kps, plagioklaz, Mn, smektit, Ba) %>%
gather(elem, cons, -id, -Source) %>%
ggplot(aes(x = Source,
y = cons,
color = Source)) +
geom_boxplot() +
geom_text(aes(label = id)) +
facet_wrap(~elem,
scales = "free_y")
# 6) ПОДТВЕРЖДЕНИЕ ТРАССЕРОВ
df_lda %>%
select(id, Source, Al, Zn, kps, plagioklaz, Mn, smektit, Ba) %>%
LDAPlot(text = T)
# 7) Размешивание
results <-
df_lda %>%
select(id, Source, Al, Zn, kps, plagioklaz, Mn, smektit, Ba) %>%
unmix(samples = 100, iter = 1000)
results %>%
plotResults()
resalts
results
